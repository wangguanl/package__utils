{"version":3,"file":"libs/verifyVar.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAqB,YAAID,IAEzBD,EAAkB,YAAIC,GACvB,CATD,CASGK,MAAM,WACT,O,wBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,SAASL,GACX,oBAAXM,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeT,EAASM,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeT,EAAS,aAAc,CAAEU,OAAO,GACvD,G,mBCAA,WAAgBC,EAAUC,KAExB,MAAMC,EAAe,CACnB,kBAAmB,SACnB,kBAAmB,SACnB,kBAAmB,SACnB,mBAAoB,UACpB,iBAAkB,QAClB,qBAAsB,YACtB,qBAAsB,YACtB,oBAAqB,WACrB,gBAAiB,OACjB,gBAAiB,OACjB,gBAAiB,OACjB,kBAAmB,UAIrB,IAAIC,EAAOD,EAAaL,OAAOO,UAAUC,SAASC,KAAKN,IACvD,MAAgE,WAAzDE,EAAaL,OAAOO,UAAUC,SAASC,KAAKL,IAC/CE,IAASF,EAAOM,QAAQ,OAAQ,IAAIC,oBACpCL,CACL,E","sources":["webpack://webpack-jq/webpack/universalModuleDefinition","webpack://webpack-jq/webpack/bootstrap","webpack://webpack-jq/webpack/runtime/make namespace object","webpack://webpack-jq/./src/verifyVar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"W_verifyVar\"] = factory();\n\telse\n\t\troot[\"W_verifyVar\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\r\n\t检测类型\r\n\tvariable, 返回当前variable参数类型\r\n\t[, isType], 判断variable参数类型\r\n\t来自用户传输的内容都必须验证类型\r\n */\r\nexport default (variable, isType) => {\r\n  // 变量类型\r\n  const variableType = {\r\n    '[object String]': 'string',\r\n    '[object Object]': 'object',\r\n    '[object Number]': 'number',\r\n    '[object Boolean]': 'boolean',\r\n    '[object Array]': 'array',\r\n    '[object Undefined]': 'undefined',\r\n    '[object Arguments]': 'arguments',\r\n    '[object Function]': 'function',\r\n    '[object Null]': 'null',\r\n    '[object Date]': 'date',\r\n    '[object JSON]': 'json',\r\n    '[object RegExp]': 'regexp',\r\n  };\r\n\r\n  // 类型\r\n  let type = variableType[Object.prototype.toString.call(variable)];\r\n  return variableType[Object.prototype.toString.call(isType)] === 'string'\r\n    ? type === isType.replace(/\\s+/g, '').toLocaleLowerCase()\r\n    : type;\r\n};\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","variable","isType","variableType","type","prototype","toString","call","replace","toLocaleLowerCase"],"sourceRoot":""}