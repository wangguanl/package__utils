{"version":3,"file":"verifyVar.mjs","mappings":"OAMA,GAAgBA,EAAUC,KAExB,MAAMC,EAAe,CACnB,kBAAmB,SACnB,kBAAmB,SACnB,kBAAmB,SACnB,mBAAoB,UACpB,iBAAkB,QAClB,qBAAsB,YACtB,qBAAsB,YACtB,oBAAqB,WACrB,gBAAiB,OACjB,gBAAiB,OACjB,gBAAiB,OACjB,kBAAmB,UAIrB,IAAIC,EAAOD,EAAaE,OAAOC,UAAUC,SAASC,KAAKP,IACvD,MAAgE,WAAzDE,EAAaE,OAAOC,UAAUC,SAASC,KAAKN,IAC/CE,IAASF,EAAOO,QAAQ,OAAQ,IAAIC,oBACpCN,CACL,G","sources":["webpack://webpack-jq/./src/verifyVar.js"],"sourcesContent":["/*\r\n\t检测类型\r\n\tvariable, 返回当前variable参数类型\r\n\t[, isType], 判断variable参数类型\r\n\t来自用户传输的内容都必须验证类型\r\n */\r\nexport default (variable, isType) => {\r\n  // 变量类型\r\n  const variableType = {\r\n    '[object String]': 'string',\r\n    '[object Object]': 'object',\r\n    '[object Number]': 'number',\r\n    '[object Boolean]': 'boolean',\r\n    '[object Array]': 'array',\r\n    '[object Undefined]': 'undefined',\r\n    '[object Arguments]': 'arguments',\r\n    '[object Function]': 'function',\r\n    '[object Null]': 'null',\r\n    '[object Date]': 'date',\r\n    '[object JSON]': 'json',\r\n    '[object RegExp]': 'regexp',\r\n  };\r\n\r\n  // 类型\r\n  let type = variableType[Object.prototype.toString.call(variable)];\r\n  return variableType[Object.prototype.toString.call(isType)] === 'string'\r\n    ? type === isType.replace(/\\s+/g, '').toLocaleLowerCase()\r\n    : type;\r\n};\r\n"],"names":["variable","isType","variableType","type","Object","prototype","toString","call","replace","toLocaleLowerCase"],"sourceRoot":""}